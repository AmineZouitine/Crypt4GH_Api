name: publish

on:
  push:
    tags:
      - "*"

jobs:
  deploy-linux:
    name: deploy-${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [ aarch64-unknown-linux-gnu, armv7-unknown-linux-gnueabihf, i686-unknown-linux-gnu, i686-unknown-linux-musl, mips-unknown-linux-gnu, mips64-unknown-linux-gnuabi64, mips64el-unknown-linux-gnuabi64, mipsel-unknown-linux-gnu, powerpc-unknown-linux-gnu, powerpc64-unknown-linux-gnu, powerpc64le-unknown-linux-gnu,           arm-unknown-linux-gnueabi          ,x86_64-unknown-linux-gnu           ,x86_64-unknown-linux-musl]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/rmt
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../rmt-${{ matrix.target }}.tar.gz rmt
          cd -
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
            path: ./rmt-${{ matrix.target }}.tar.gz
            
      - name: Release
        uses: softprops/action-gh-release@91409e712cf565ce9eff10c87a8d1b11b81757ae
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./rmt-${{ matrix.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  deploy-macos:
    name:  deploy-${{ matrix.target }} 
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v2

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - run: rustup target add aarch64-apple-darwin
        if: matrix.target == 'aarch64-apple-darwin'

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/rmt
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../rmt-${{ matrix.target }}.tar.gz rmt
          cd -
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./rmt-${{ matrix.target }}.tar.gz
            
      - name: Release
        uses: softprops/action-gh-release@91409e712cf565ce9eff10c87a8d1b11b81757ae
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./rmt-${{ matrix.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
